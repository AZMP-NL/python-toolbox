'''
To generate timeseries of 2-4 degC bottom habitat.

Uses pickled object generated by azmp_bottom_stats.py

'''

import numpy as  np
import matplotlib.pyplot as plt
import pandas as pd
import os

# plot tuning:
font = {'family' : 'sans-serif',
        'weight' : 'normal',
        'size'   : 13}
plt.rc('font', **font)
width = 0.7

clim_year = [1981, 2010]

#### ------------- For fall ---------------- ####
# 1.
infile = 'stats_2HJ_fall.pkl'
df = pd.read_pickle(infile)
df.index = pd.to_datetime(df.index) # update index to datetime
df = df['area_colder2']
df = df/1000
df_clim = df[(df.index.year>=clim_year[0]) & (df.index.year<=clim_year[1])]
std_anom = (df-df_clim.mean(axis=0))/df_clim.std(axis=0)
std_anom2HJ = std_anom

# 2.
infile = 'stats_3K_fall.pkl'
df = pd.read_pickle(infile)
df.index = pd.to_datetime(df.index) # update index to datetime
df = df['area_colder2']
df = df/1000
df_clim = df[(df.index.year>=clim_year[0]) & (df.index.year<=clim_year[1])]
std_anom = (df-df_clim.mean(axis=0))/df_clim.std(axis=0)
std_anom3K = std_anom


# 3.
infile = 'stats_3LNO_fall.pkl'
df = pd.read_pickle(infile)
df.index = pd.to_datetime(df.index) # update index to datetime
df = df['area_colder2']
df = df/1000
df_clim = df[(df.index.year>=clim_year[0]) & (df.index.year<=clim_year[1])]
std_anom = (df-df_clim.mean(axis=0))/df_clim.std(axis=0)
std_anom3LNO = std_anom


# 4. plot all merged together
std_anom_all = pd.concat([std_anom2HJ, std_anom3K, std_anom3LNO], axis=1)
df = std_anom_all.mean(axis=1)
df.index = df.index.year

fig = plt.figure(4)
fig.clf()
sign=df>0
ax = df.plot(kind='bar', color=sign.map({True: 'steelblue', False: 'indianred'}), width = width)
n = 5 # xtick every n years
ticks = ax.xaxis.get_ticklocs()
ticklabels = [l.get_text() for l in ax.xaxis.get_ticklabels()]
ax.xaxis.set_ticks(ticks[::n])
ax.xaxis.set_ticklabels(ticklabels[::n])
plt.ylabel('Mean Standardized Anomaly', weight='bold', fontsize=14)
#plt.xlabel('Year')
plt.title(r'$\rm <2^{\circ}C$ Habitat anomaly for 2HJ3KLNO - Fall', weight='bold', fontsize=14)
plt.grid()
plt.ylim([-2.5,2.5])
plt.fill_between([ticks[0]-1, ticks[-1]+1], [-.5, -.5], [.5, .5], facecolor='gray', alpha=.2)
fig.set_size_inches(w=15,h=7)
fig_name = 'crab_habitat_anomalies_fall.png'
fig.savefig(fig_name, dpi=300)
os.system('convert -trim crab_habitat_anomalies_fall.png crab_habitat_anomalies_fall.png')




#### ------------- For Spring ---------------- ####
# 1.
infile = 'stats_3LNO_spring.pkl'
df = pd.read_pickle(infile)
df.index = pd.to_datetime(df.index) # update index to datetime
df = df['area_colder2']
df = df/1000
df_clim = df[(df.index.year>=clim_year[0]) & (df.index.year<=clim_year[1])]
std_anom = (df-df_clim.mean(axis=0))/df_clim.std(axis=0)
std_anom3LNO = std_anom

# 2.
infile = 'stats_3Ps_spring.pkl'
df = pd.read_pickle(infile)
df.index = pd.to_datetime(df.index) # update index to datetime
df = df['area_colder2']
df = df/1000
df_clim = df[(df.index.year>=clim_year[0]) & (df.index.year<=clim_year[1])]
std_anom = (df-df_clim.mean(axis=0))/df_clim.std(axis=0)
std_anom3Ps = std_anom

# 4. plot all merged together
std_anom_all = pd.concat([std_anom3LNO, std_anom3Ps], axis=1)
df = std_anom_all.mean(axis=1)
df.index = df.index.year


fig = plt.figure(5)
fig.clf()
sign=df>0
ax = df.plot(kind='bar', color=sign.map({True: 'steelblue', False: 'indianred'}), width = width)
n = 5 # xtick every n years
ticks = ax.xaxis.get_ticklocs()
ticklabels = [l.get_text() for l in ax.xaxis.get_ticklabels()]
ax.xaxis.set_ticks(ticks[::n])
ax.xaxis.set_ticklabels(ticklabels[::n])
plt.ylabel('Mean Standardized Anomaly', weight='bold', fontsize=14)
#plt.xlabel('Year')
plt.title(r'$\rm <2^{\circ}C$ Habitat anomaly for 3LNOPs - Spring', weight='bold', fontsize=14)
plt.grid()
plt.fill_between([ticks[0]-1, ticks[-1]+1], [-.5, -.5], [.5, .5], facecolor='gray', alpha=.2)
plt.ylim([-2.5,2.5])
#plt.gca().set_xlim([pd.to_datetime('1979-01-01'), pd.to_datetime('2018-01-01')]) 
fig.set_size_inches(w=15,h=7)
fig_name = 'crab_habitat_anomalies_spring.png'
fig.savefig(fig_name, dpi=300)
os.system('convert -trim crab_habitat_anomalies_spring.png crab_habitat_anomalies_spring.png')


#### ------------- For Summer ---------------- ####
# 1.
infile = 'stats_4R_summer.pkl'
df = pd.read_pickle(infile)
df.index = pd.to_datetime(df.index) # update index to datetime
df = df['area_colder2']
df = df/1000
# !!! Flagging some years!
flags = np.array([1980, 1981, 1982, 1990, 1995, 1996, 1997, 1998, 2015, 2018])
df[df.index.year.isin(flags)]=np.nan

df_clim = df[(df.index.year>=clim_year[0]) & (df.index.year<=clim_year[1])]
std_anom = (df-df_clim.mean(axis=0))/df_clim.std(axis=0)
std_anom4R = std_anom

# 4. plot all merged together
df = std_anom4R
df.index = df.index.year


fig = plt.figure(6)
fig.clf()
sign=df>0
ax = df.plot(kind='bar', color=sign.map({True: 'steelblue', False: 'indianred'}), width = width)
n = 5 # xtick every n years
ticks = ax.xaxis.get_ticklocs()
ticklabels = [l.get_text() for l in ax.xaxis.get_ticklabels()]
ax.xaxis.set_ticks(ticks[::n])
ax.xaxis.set_ticklabels(ticklabels[::n])
plt.ylabel('Mean Standardized Anomaly', weight='bold', fontsize=14)
#plt.xlabel('Year')
plt.title(r'$\rm <2^{\circ}C$ Habitat anomaly for 4R - Summer', weight='bold', fontsize=14)
plt.grid()
plt.ylim([-2.5,2.5])
#plt.gca().set_xlim([pd.to_datetime('1979-01-01'), pd.to_datetime('2018-01-01')]) 
fig.set_size_inches(w=15,h=7)
fig_name = 'crab_habitat_anomalies4R_summer.png'
fig.savefig(fig_name, dpi=300)
os.system('convert -trim crab_habitat_anomalies4R_summer.png crab_habitat_anomalies4R_summer.png')
